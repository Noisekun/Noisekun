{"version":3,"sources":["utils/usePersistedState.ts","services/defaultVariables.ts","styles/effects.ts","styles/global.ts","styles/themes/light.ts","styles/themes/dark.ts","components/Header/styles.ts","components/Header/index.tsx","components/Audios/styles.ts","components/Audios/index.tsx","components/Sound/styles.ts","components/Sound/index.tsx","components/Configurations/configs/background/index.tsx","components/Configurations/configs/theme/index.tsx","components/Configurations/styles.ts","components/Configurations/index.tsx","components/VolumeController/styles.ts","components/VolumeController/index.tsx","components/Footer/styles.ts","components/Footer/index.tsx","functions/changeStateOfAudio.ts","App.tsx","index.tsx"],"names":["usePeristedState","key","initialState","useState","storageValue","localStorage","getItem","JSON","parse","state","setState","useEffect","setItem","stringify","dotenv","config","HOST","background_change","keyframes","createGlobalStyle","title","colors","header","text","background","footer","arrow_button","color","hover","checked","fieldset","title_background","input_background","reset_button","active","desktop","mobile","sound","selected","volume_controller","thumb","LocalHeader","styled","props","theme","Header","href","AudiosBlock","div","Audios","Sound","VolumeController","changeStateOfAudio","env","name","SoundComponent","SoundButton","loop","preload","id","src","type","className","onClick","audio","document","querySelector","rain","storm","wind","water","leafs","fire","night","coffee","fan","train","underwater","audioObject","BackgroundConfig","setUrl","url","placeholder","value","onChange","event","target","ToogleThemeConfig","toggleTheme","useContext","ThemeContext","checkedIcon","style","display","justifyContent","alignItems","height","width","fontSize","icon","faMoon","uncheckedIcon","faSun","handleDiameter","onColor","offColor","onHandleColor","offHandleColor","ConfigButton","input","ConfigLabel","label","ConfigurationsList","Configurations","backgroundUrl","setBackgroundUrl","saveConfigs","body","backgroundImage","htmlFor","faChevronLeft","resetConfigs","VolumeControllerInput","VolumeControler","rangeValue","setRangeValue","min","max","Number","decimalValue","changeVolume","volume","FooterSection","Footer","stateOfAudio","setStateOfAudio","pause","play","App","usePersistedState","light","setTheme","environment","dark","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.17de5d32.chunk.js","sourcesContent":["import { useState, useEffect, Dispatch, SetStateAction } from 'react';\n\ntype Response<T> = [T, Dispatch<SetStateAction<T>>];\n\nfunction usePeristedState<T>(key: string, initialState: T): Response<T> {\n  const [state, setState] = useState(() => {\n    const storageValue = localStorage.getItem(key);\n\n    if (storageValue) {\n      return JSON.parse(storageValue);\n    } else {\n      return initialState;\n    }\n  });\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n\n  return [state, setState];\n}\n\nexport default usePeristedState;\n","import dotenv from 'dotenv';\n\ndotenv.config();\n\nconst HOST = 'https://noisekun-server.herokuapp.com';\n\nexport default { HOST };\n","import { keyframes } from 'styled-components';\n\nexport const background_change = keyframes`\n\n  0% {\n    background-color: #52bad5;\n  }\n  5% {\n    background-color: #2980b9;\n  }\n  10% {\n    background-color: #5ce5b4;\n  }\n  15% {\n    background-color: #73a84f;\n  }\n  20% {\n    background-color: #9b59b6;\n  }\n  25% {\n    background-color: #cb92e2;\n  }\n  30% {\n    background-color: #1c128b;\n  }\n  35% {\n    background-color: #d8e33d;\n  }\n  40% {\n    background-color: #e2b618;\n  }\n  45% {\n    background-color: #d35400;\n  }\n  50% {\n    background-color: #ba1616;\n  }\n  55% {\n    background-color: #52bad5;\n  }\n  60% {\n    background-color: #2980b9;\n  }\n  65% {\n    background-color: #5ce5b4;\n  }\n  70% {\n    background-color: #73a84f;\n  }\n  75% {\n    background-color: #9b59b6;\n  }\n  80% {\n    background-color: #cb92e2;\n  }\n  85% {\n    background-color: #1c128b;\n  }\n  90% {\n    background-color: #e3b63d;\n  }\n  95% {\n    background-color: #d8e33d;\n  }\n  100% {\n    background-color: #52bad5;\n  }\n`;\n","import { createGlobalStyle } from 'styled-components';\nimport { background_change } from './effects';\n\nexport default createGlobalStyle`\n\n  @import url('https://fonts.googleapis.com/css2?family=Nunito:wght@300;700&display=swap');\n\n  * {\n    padding: 0;\n    margin: 0;\n    outline: none;\n  }\n\n  *:focus,\n  *:active {\n    outline: none;\n  }\n\n  *::-moz-focus-outer {\n    border: 0;\n  }\n\n\n\n  body {\n    font-family: 'Nunito', sans-serif;\n    font-weight: 300;\n    color: white;\n\n    background: fixed no-repeat center;\n    background-size: cover;\n    animation: ${background_change} 300s 0s infinite;\n\n    input:focus {\n    outline: none;\n    }\n\n    section.main-section {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n    }\n\n    section.audio-section {\n      min-height: 85vh;\n      height: 100%;\n    }\n\n    button {\n      background: none;\n      border: none;\n    }\n\n    button:hover {\n      cursor: pointer;\n    }\n  }\n`;\n","export default {\n  title: 'light',\n\n  colors: {\n    header: {\n      text: 'rgba(255, 255, 255, 0.7)',\n      background: 'rgba(255, 255, 255, 0.1)',\n    },\n    footer: {\n      text: 'rgba(255,255,255,1)',\n      background: 'rgba(255, 255, 255, 0.1)',\n    },\n    config: {\n      arrow_button: {\n        color: 'rgba(255, 255, 255, 0.5)',\n        hover: 'rgba(255, 255, 255, 0.7)',\n        checked: 'rgba(255, 255, 255, 1)',\n      },\n      fieldset: {\n        color: 'rgba(56, 56, 56,1)',\n        title_background: 'rgba(255, 255, 255, 0.7)',\n        input_background: 'rgba(255, 255, 255, 0.5)',\n      },\n      reset_button: {\n        color: 'rgba(0, 0, 0, 0.753)',\n        background: 'rgba(255, 255, 255, 0.5)',\n        hover: 'rgba(255, 200, 200, 0.5)',\n        active: {\n          desktop: 'rgba(255,255,255,1)',\n          mobile: 'rgba(255, 200, 200, 0.8)',\n        },\n      },\n    },\n    sound: {\n      color: 'rgba(255, 255, 255, 0.5)',\n      hover: 'rgba(255, 255, 255, 0.8)',\n      selected: 'rgba(255, 255, 255, 1)',\n    },\n    volume_controller: {\n      background: 'rgba(255,255,255,1)',\n      thumb: 'rgba(255,255,255,1)',\n    },\n  },\n};\n","export default {\n  title: 'dark',\n\n  colors: {\n    header: {\n      text: 'rgba(0, 0, 0, 0.7)',\n      background: 'rgba(0, 0, 0, 0.1)',\n    },\n    footer: {\n      text: 'rgba(0,0,0,1)',\n      background: 'rgba(0, 0, 0, 0.1)',\n    },\n    config: {\n      arrow_button: {\n        color: 'rgba(0, 0, 0, 0.5)',\n        hover: 'rgba(0, 0, 0, 0.7)',\n        checked: 'rgba(0, 0, 0, 1)',\n      },\n      fieldset: {\n        color: 'rgba(255, 255, 255,1)',\n        title_background: 'rgba(0, 0, 0, 0.7)',\n        input_background: 'rgba(0, 0, 0, 0.5)',\n      },\n      reset_button: {\n        color: 'rgba(255, 255, 255, 0.753)',\n        background: 'rgba(0, 0, 0, 0.5)',\n        hover: 'rgba(255, 55, 55, 0.5)',\n        active: {\n          desktop: 'rgba(0,0,0,1)',\n          mobile: 'rgba(255, 55, 55, 0.8)',\n        },\n      },\n    },\n    sound: {\n      color: 'rgba(0, 0, 0, 0.5)',\n      hover: 'rgba(0, 0, 0, 0.8)',\n      selected: 'rgba(0, 0, 0, 1)',\n    },\n    volume_controller: {\n      background: 'rgba(0,0,0,1)',\n      thumb: 'rgba(0,0,0,1)',\n    },\n  },\n};\n","import styled from 'styled-components';\n\nexport const LocalHeader = styled.header`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  height: 15vh;\n\n  backdrop-filter: blur(10px);\n  background: ${(props) => props.theme.colors.header.background};\n  box-shadow: 0 1px 10px rgba(0, 0, 0, 0.089);\n\n  h1 {\n    a {\n      text-decoration: none;\n      font-weight: 700;\n      color: ${(props) => props.theme.colors.header.text};\n    }\n  }\n`;\n","import React from 'react';\n\nimport { LocalHeader } from './styles';\n\nexport default function Header(): JSX.Element {\n  return (\n    <LocalHeader>\n      <h1>\n        <a href=\"/Noisekun\">Noisekun</a>\n      </h1>\n    </LocalHeader>\n  );\n}\n","import styled from 'styled-components';\n\nexport const AudiosBlock = styled.div`\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  gap: 30px;\n\n  @media (max-width: 650px) {\n    grid-template-columns: repeat(4, 1fr);\n  }\n\n  @media (max-width: 550px) {\n    grid-template-columns: 1fr 1fr 1fr;\n  }\n\n  @media (max-width: 400px) {\n    grid-template-columns: 1fr 1fr;\n  }\n\n  @media (max-width: 300px) {\n    grid-template-columns: 1fr;\n  }\n`;\n","import React from 'react';\n\nimport { AudiosBlock } from './styles';\n\nexport default function Audios({\n  Sound,\n  VolumeController,\n  changeStateOfAudio,\n  env,\n}: IAudios): JSX.Element {\n  return (\n    <AudiosBlock>\n      <Sound\n        name=\"rain\"\n        changeStateOfAudio={changeStateOfAudio}\n        VolumeController={VolumeController}\n        env={env}\n      />\n      <Sound\n        name=\"storm\"\n        changeStateOfAudio={changeStateOfAudio}\n        VolumeController={VolumeController}\n        env={env}\n      />\n      <Sound\n        name=\"wind\"\n        changeStateOfAudio={changeStateOfAudio}\n        VolumeController={VolumeController}\n        env={env}\n      />\n      <Sound\n        name=\"water\"\n        changeStateOfAudio={changeStateOfAudio}\n        VolumeController={VolumeController}\n        env={env}\n      />\n      <Sound\n        name=\"ocean-waves\"\n        changeStateOfAudio={changeStateOfAudio}\n        VolumeController={VolumeController}\n        env={env}\n      />\n      <Sound\n        name=\"small-waves\"\n        changeStateOfAudio={changeStateOfAudio}\n        VolumeController={VolumeController}\n        env={env}\n      />\n      <Sound\n        name=\"forest-ambience\"\n        changeStateOfAudio={changeStateOfAudio}\n        VolumeController={VolumeController}\n        env={env}\n      />\n      <Sound\n        name=\"leafs\"\n        changeStateOfAudio={changeStateOfAudio}\n        VolumeController={VolumeController}\n        env={env}\n      />\n      <Sound\n        name=\"fire\"\n        changeStateOfAudio={changeStateOfAudio}\n        VolumeController={VolumeController}\n        env={env}\n      />\n      <Sound\n        name=\"night\"\n        changeStateOfAudio={changeStateOfAudio}\n        VolumeController={VolumeController}\n        env={env}\n      />\n      <Sound\n        name=\"coffee\"\n        changeStateOfAudio={changeStateOfAudio}\n        VolumeController={VolumeController}\n        env={env}\n      />\n      <Sound\n        name=\"fan\"\n        changeStateOfAudio={changeStateOfAudio}\n        VolumeController={VolumeController}\n        env={env}\n      />\n      <Sound\n        name=\"train\"\n        changeStateOfAudio={changeStateOfAudio}\n        VolumeController={VolumeController}\n        env={env}\n      />\n      <Sound\n        name=\"air-plane\"\n        changeStateOfAudio={changeStateOfAudio}\n        VolumeController={VolumeController}\n        env={env}\n      />\n      <Sound\n        name=\"underwater\"\n        changeStateOfAudio={changeStateOfAudio}\n        VolumeController={VolumeController}\n        env={env}\n      />\n    </AudiosBlock>\n  );\n}\n","import styled from 'styled-components';\n\nexport const SoundComponent = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  width: 100px;\n  height: 100px;\n`;\n\nexport const SoundButton = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 100px;\n  height: 100px;\n\n  color: ${(props) => props.theme.colors.sound.color};\n\n  transition: 0.1s;\n\n  &:hover {\n    cursor: pointer;\n    color: ${(props) => props.theme.colors.sound.hover};\n  }\n\n  &.selected {\n    color: ${(props) => props.theme.colors.sound.selected};\n  }\n\n  .icons {\n    font-size: 80px;\n  }\n`;\n","import React, { useState } from 'react';\n\nimport { SoundComponent, SoundButton } from './styles';\n\nexport default function Sound({\n  name,\n  changeStateOfAudio,\n  VolumeController,\n  env,\n}: ISound): JSX.Element {\n  const icons: { [index: string]: string } = {\n    rain: 'icofont-rainy',\n    storm: 'icofont-rainy-thunder',\n    wind: 'icofont-wind',\n    water: 'icofont-water-drop',\n    'ocean-waves': 'icofont-wind-waves',\n    'small-waves': 'icofont-wave',\n    'forest-ambience': 'icofont-tree-alt',\n    leafs: 'icofont-leaf',\n    fire: 'icofont-fire-burn',\n    night: 'icofont-night',\n    coffee: 'icofont-coffee-mug',\n    fan: 'icofont-headphone',\n    train: 'icofont-train-line',\n    'air-plane': 'icofont-airplane',\n    underwater: 'icofont-swimmer',\n  };\n\n  const [state, setState] = useState(false);\n\n  return (\n    <SoundComponent>\n      <audio loop preload=\"true\" id={name}>\n        <source src={`${env.HOST}/webm/${name}`} type=\"audio/webm\" />\n        <source src={`${env.HOST}/mp3/${name}`} type=\"audio/mp3\" />\n      </audio>\n\n      <SoundButton\n        id={`${name}-button`}\n        className={state ? 'selected' : ''}\n        onClick={() => {\n          const audio = document.querySelector<HTMLAudioElement>(`#${name}`);\n          changeStateOfAudio(audio, state, setState);\n        }}\n      >\n        <i className={`${icons[name]} icons`} />\n      </SoundButton>\n\n      <VolumeController\n        audioObject={document.querySelector<HTMLAudioElement>(`#${name}`)}\n        id={`${name}-audio-controller`}\n        state={state}\n      />\n    </SoundComponent>\n  );\n}\n","import React from 'react';\n\n// import { Container } from './styles';\n\nconst BackgroundConfig: React.FC<IBackgroundConfig> = ({ setUrl, url }) => {\n  return (\n    <>\n      <div className=\"fieldset\">\n        <div className=\"fieldset-content fieldset-content-title\">\n          <span>background</span>\n        </div>\n        <div className=\"fieldset-content fieldset-content-input\">\n          <input\n            type=\"text\"\n            id=\"url\"\n            name=\"url\"\n            placeholder=\"wallpaper url\"\n            value={url}\n            onChange={(event) => {\n              setUrl(event.target.value);\n            }}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default BackgroundConfig;\n","import React, { useContext } from 'react';\nimport { ThemeContext } from 'styled-components';\nimport Switch from 'react-switch';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSun, faMoon } from '@fortawesome/free-solid-svg-icons';\n\n// import { Container } from './styles';\n\nconst ToogleThemeConfig: React.FC<IThemeConfig> = ({ toggleTheme }) => {\n  const { title } = useContext(ThemeContext);\n\n  return (\n    <>\n      <div className=\"fieldset\">\n        <div className=\"fieldset-content fieldset-content-title\">\n          <span>theme</span>\n        </div>\n        <div className=\"fieldset-content fieldset-content-input\">\n          <Switch\n            onChange={toggleTheme}\n            checked={title === 'dark'}\n            checkedIcon={\n              <div\n                style={{\n                  display: 'flex',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                  height: '100%',\n                  width: '100%',\n                  fontSize: '20px',\n                  color: '#262525',\n                }}\n              >\n                <FontAwesomeIcon icon={faMoon} />\n              </div>\n            }\n            uncheckedIcon={\n              <div\n                style={{\n                  display: 'flex',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                  height: '100%',\n                  width: '100%',\n                  fontSize: '20px',\n                  color: '#e8e8e8',\n                }}\n              >\n                <FontAwesomeIcon icon={faSun} />\n              </div>\n            }\n            handleDiameter={30}\n            height={30}\n            width={60}\n            // onColor=\"#7f7f7f\"\n            // offColor=\"#c4c4c4\"\n            onColor=\"none\"\n            offColor=\"none\"\n            onHandleColor=\"#262525\"\n            offHandleColor=\"#e8e8e8\"\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ToogleThemeConfig;\n","import styled from 'styled-components';\n\nexport const ConfigButton = styled.input`\n  display: none;\n\n  @media (max-width: 750px) {\n    display: none;\n  }\n`;\n\nexport const ConfigLabel = styled.label`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  position: fixed;\n  top: 2vh;\n  right: 2vw;\n\n  width: 80px;\n  height: 80px;\n\n  color: ${(props) => props.theme.colors.config.arrow_button.color};\n  font-size: 30px;\n\n  transition: 1s;\n\n  &:hover {\n    cursor: pointer;\n    color: ${(props) => props.theme.colors.config.arrow_button.hover};\n  }\n\n  ${ConfigButton}:checked ~ & {\n    transform: translateX(-14vw) rotateY(-180deg);\n    color: ${(props) => props.theme.colors.config.arrow_button.checked};\n  }\n\n  @media (max-width: 1100px) {\n    transition: none;\n\n    ${ConfigButton}:checked ~ & {\n      transform: rotateY(-180deg);\n      left: 0;\n      color: ${(props) => props.theme.colors.config.arrow_button.checked};\n    }\n  }\n  @media (max-width: 750px) {\n    display: none;\n  }\n`;\n\nexport const ConfigurationsList = styled.div`\n  position: fixed;\n  top: 0;\n  right: -300px;\n\n  height: 100%;\n  min-width: 14vw;\n\n  padding: 15px;\n\n  transition: 1s;\n\n  div.fieldset {\n    div.fieldset-content {\n      padding: 15px;\n      text-align: center;\n      color: ${(props) => props.theme.colors.config.fieldset.color};\n    }\n\n    div.fieldset-content-title {\n      border-radius: 10px 10px 0 0;\n      backdrop-filter: blur(10px);\n      background: ${(props) =>\n        props.theme.colors.config.fieldset.title_background};\n    }\n\n    div.fieldset-content-input {\n      border-radius: 0 0 10px 10px;\n      backdrop-filter: blur(5px);\n      background: ${(props) =>\n        props.theme.colors.config.fieldset.input_background};\n    }\n\n    input#url {\n      border: none;\n      background: none;\n      text-align: center;\n      color: ${(props) => props.theme.colors.config.fieldset.color};\n    }\n  }\n\n  div.fieldset + div.fieldset {\n    margin-top: 5px;\n  }\n\n  button {\n    border-radius: 10px;\n\n    padding: 15px;\n    margin-top: 5px;\n\n    width: 100%;\n\n    backdrop-filter: blur(5px);\n    background: ${(props) => props.theme.colors.config.reset_button.background};\n    color: ${(props) => props.theme.colors.config.reset_button.color};\n    transition: 0.1s;\n  }\n\n  button:hover {\n    background: ${(props) => props.theme.colors.config.reset_button.hover};\n    backdrop-filter: blur(10px);\n  }\n  button:active {\n    background-color: ${(props) =>\n      props.theme.colors.config.reset_button.active.desktop};\n  }\n\n  ${ConfigButton}:checked ~ & {\n    transform: translateX(-300px);\n  }\n\n  @media (max-width: 1100px) {\n    div.fieldset {\n      div.fieldset-content-title {\n        backdrop-filter: blur(10px);\n      }\n      div.fieldset-content-input {\n        backdrop-filter: blur(5px);\n      }\n    }\n  }\n\n  @media (max-width: 750px) {\n    position: relative;\n    right: 0;\n\n    max-width: 250px;\n\n    margin: auto;\n\n    div.fieldset {\n      div.fieldset-content {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n      }\n      div.fieldset-content-input {\n        min-height: 30px;\n\n        border-radius: 0 0 10px 10px;\n\n        backdrop-filter: blur(5px);\n        background: ${(props) =>\n          props.theme.colors.config.fieldset.input_background};\n      }\n    }\n\n    button {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n\n      height: 50px;\n\n      background: ${(props) => props.theme.colors.config.reset_button.hover};\n      color: ${(props) => props.theme.colors.config.reset_button.color};\n    }\n\n    button:active {\n      background-color: ${(props) =>\n        props.theme.colors.config.reset_button.active.mobile};\n      backdrop-filter: blur(10px);\n    }\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft } from '@fortawesome/free-solid-svg-icons';\n\nimport BackgroundConfig from './configs/background';\nimport ToogleThemeConfig from './configs/theme';\n\nimport { ConfigButton, ConfigLabel, ConfigurationsList } from './styles';\n\nconst Configurations: React.FC<IConfigurations> = ({ toggleTheme }) => {\n  const [backgroundUrl, setBackgroundUrl] = useState(\n    localStorage.getItem('background_url') ?? ''\n  );\n\n  function saveConfigs() {\n    const body = document.querySelector('body');\n    if (body) {\n      body.style.backgroundImage = `url(${backgroundUrl})`;\n      localStorage.setItem('background_url', backgroundUrl);\n    }\n  }\n  function resetConfigs() {\n    setBackgroundUrl('');\n  }\n\n  useEffect(() => {\n    saveConfigs();\n  }, []);\n  useEffect(() => {\n    saveConfigs();\n  }, [backgroundUrl]);\n\n  return (\n    <>\n      <ConfigButton type=\"checkbox\" id=\"config-button\" />\n      <ConfigLabel htmlFor=\"config-button\">\n        <FontAwesomeIcon icon={faChevronLeft} />\n      </ConfigLabel>\n      <ConfigurationsList className=\"configurations-list\">\n        <BackgroundConfig url={backgroundUrl} setUrl={setBackgroundUrl} />\n        <ToogleThemeConfig toggleTheme={toggleTheme} />\n\n        <button onClick={() => resetConfigs()} type=\"button\">\n          reset\n        </button>\n      </ConfigurationsList>\n    </>\n  );\n};\n\nexport default Configurations;\n","import styled from 'styled-components';\n\nexport const VolumeControllerInput = styled.input`\n  opacity: 0;\n\n  appearance: none;\n\n  width: 100%;\n  height: 2px;\n\n  background: ${(props) => props.theme.colors.volume_controller.background};\n\n  cursor: pointer;\n\n  /* MARKER */\n  /* Chrome/Safari/Opera */\n  &::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    height: 13px;\n    width: 13px;\n\n    background: ${(props) => props.theme.colors.volume_controller.thumb};\n\n    border: none;\n    border-radius: 100%;\n  }\n\n  /* Firefox */\n  &::-moz-range-thumb {\n    height: 13px;\n    width: 13px;\n\n    background: ${(props) => props.theme.colors.volume_controller.thumb};\n\n    border: none;\n    border-radius: 100%;\n  }\n\n  /* IE */\n  &::-ms-thumb {\n    height: 13px;\n    width: 13px;\n\n    background: ${(props) => props.theme.colors.volume_controller.thumb};\n\n    border: none;\n    border-radius: 100%;\n  }\n\n  &.selected {\n    opacity: 1;\n  }\n`;\n","import React, { useState } from 'react';\n\nimport { VolumeControllerInput } from './styles';\n\nconst VolumeControler: React.FC<IVolumeController> = ({\n  audioObject,\n  id,\n  state,\n}) => {\n  const changeVolume = (\n    audio: HTMLAudioElement | null,\n    value: number\n  ): void => {\n    if (audio) {\n      audio.volume = value;\n    }\n  };\n\n  const [rangeValue, setRangeValue] = useState(1000);\n\n  return (\n    <VolumeControllerInput\n      className={state ? 'selected' : ''}\n      type=\"range\"\n      name=\"audio-decrement\"\n      id={id}\n      min=\"1\"\n      max=\"1000\"\n      value={rangeValue}\n      onChange={(event) => {\n        setRangeValue(Number(event.target.value));\n        const decimalValue = Number(event.target.value) / 1000;\n        changeVolume(audioObject, decimalValue);\n      }}\n    />\n  );\n};\n\nexport default VolumeControler;\n","import styled from 'styled-components';\n\nexport const FooterSection = styled.footer`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n\n  padding: 15px;\n\n  background: ${(props) => props.theme.colors.footer.background};\n  backdrop-filter: blur(4px);\n\n  p {\n    a {\n      text-decoration: none;\n      color: ${(props) => props.theme.colors.footer.text};\n    }\n  }\n\n  p {\n    a.author {\n      font-weight: bold;\n    }\n  }\n\n  p {\n    a.copy:hover {\n      cursor: pointer;\n      text-decoration: underline;\n    }\n  }\n`;\n","import React from 'react';\n\nimport { FooterSection } from './styles';\n\nexport default function Footer(): JSX.Element {\n  return (\n    <FooterSection>\n      <div>\n        <p>\n          by{' '}\n          <a href=\"https://github.com/mateusfg7\" className=\"author\">\n            mateusfg7{' '}\n          </a>{' '}\n        </p>\n        <p>\n          <a\n            href=\"https://github.com/mateusfg7/Noisekun/blob/master/LICENSE\"\n            className=\"copy\"\n          >\n            {' '}\n            &copy; MIT License\n          </a>\n        </p>\n      </div>\n    </FooterSection>\n  );\n}\n","export default function changeStateOfAudio(\n  audio: HTMLAudioElement | null,\n  stateOfAudio: boolean,\n  setStateOfAudio: React.Dispatch<React.SetStateAction<boolean>>\n): void {\n  if (!stateOfAudio) {\n    if (audio) {\n      audio.play();\n      setStateOfAudio(true);\n    }\n  } else if (audio) {\n    audio.pause();\n    setStateOfAudio(false);\n  }\n}\n","import React from 'react';\nimport { ThemeProvider, DefaultTheme } from 'styled-components';\nimport usePersistedState from './utils/usePersistedState';\n\nimport environment from './services/defaultVariables';\n\nimport GlobalStyle from './styles/global';\n\nimport light from './styles/themes/light';\nimport dark from './styles/themes/dark';\n\nimport Header from './components/Header';\nimport Audios from './components/Audios';\nimport Sound from './components/Sound';\nimport Configurations from './components/Configurations';\nimport VolumeController from './components/VolumeController';\nimport Footer from './components/Footer';\n\nimport changeStateOfAudio from './functions/changeStateOfAudio';\n\nfunction App(): JSX.Element {\n  const [theme, setTheme] = usePersistedState('theme', light);\n\n  const toggleTheme = () => {\n    setTheme(theme.title === 'light' ? dark : light);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"App\">\n        <GlobalStyle />\n\n        <Header />\n        <section className=\"main-section audio-section\">\n          <Audios\n            Sound={Sound}\n            VolumeController={VolumeController}\n            changeStateOfAudio={changeStateOfAudio}\n            env={environment}\n          />\n        </section>\n        <Configurations toggleTheme={toggleTheme} />\n        <Footer />\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}