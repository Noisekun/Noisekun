{"version":3,"sources":["services/defaultVariables.ts","components/Header/index.tsx","components/Audios/index.tsx","components/Sound/index.tsx","components/Configurations/index.tsx","components/VolumeController/index.tsx","functions/changeStateOfAudio.ts","App.tsx","index.tsx"],"names":["dotenv","config","HOST","Header","className","href","Audios","Sound","VolumeController","changeStateOfAudio","env","name","useState","state","setState","loop","id","src","type","onClick","audio","document","querySelector","button","getElementById","audioController","alt","audioObject","Configurations","localStorage","getItem","url","setUrl","saveConfigs","body","style","backgroundImage","setItem","useEffect","placeholder","onChange","event","target","value","VolumeControler","rangeValue","setRangeValue","min","max","Number","decimalValue","volume","stateOfAudio","setStateOfAudio","audioCotroller","pause","play","classList","toggle","App","environment","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.74d60d6f.chunk.js","sourcesContent":["import dotenv from \"dotenv\";\ndotenv.config();\n\nconst HOST = \"https://noisekun-server.herokuapp.com\";\n\nexport { HOST };\n","import React from \"react\";\n\nimport \"./style.css\";\n\nexport default function Header() {\n  return (\n    <header className='header'>\n      <h1>\n        <a href='/Noisekun'>Noisekun</a>\n      </h1>\n    </header>\n  );\n}\n","import React from \"react\";\n\nimport \"./styles.css\";\n\nexport default function Audios({\n  Sound,\n  VolumeController,\n  changeStateOfAudio,\n  env,\n}: IAudios) {\n  return (\n    <div className='audios'>\n      <Sound\n        name='rain'\n        changeStateOfAudio={changeStateOfAudio}\n        VolumeController={VolumeController}\n        env={env}\n      />\n      <Sound\n        name='storm'\n        changeStateOfAudio={changeStateOfAudio}\n        VolumeController={VolumeController}\n        env={env}\n      />\n      <Sound\n        name='wind'\n        changeStateOfAudio={changeStateOfAudio}\n        VolumeController={VolumeController}\n        env={env}\n      />\n      <Sound\n        name='water'\n        changeStateOfAudio={changeStateOfAudio}\n        VolumeController={VolumeController}\n        env={env}\n      />\n      <Sound\n        name='ocean-waves'\n        changeStateOfAudio={changeStateOfAudio}\n        VolumeController={VolumeController}\n        env={env}\n      />\n      <Sound\n        name='small-waves'\n        changeStateOfAudio={changeStateOfAudio}\n        VolumeController={VolumeController}\n        env={env}\n      />\n      <Sound\n        name='forest-ambience'\n        changeStateOfAudio={changeStateOfAudio}\n        VolumeController={VolumeController}\n        env={env}\n      />\n      <Sound\n        name='leafs'\n        changeStateOfAudio={changeStateOfAudio}\n        VolumeController={VolumeController}\n        env={env}\n      />\n      <Sound\n        name='fire'\n        changeStateOfAudio={changeStateOfAudio}\n        VolumeController={VolumeController}\n        env={env}\n      />\n      <Sound\n        name='night'\n        changeStateOfAudio={changeStateOfAudio}\n        VolumeController={VolumeController}\n        env={env}\n      />\n      <Sound\n        name='coffee'\n        changeStateOfAudio={changeStateOfAudio}\n        VolumeController={VolumeController}\n        env={env}\n      />\n      <Sound\n        name='fan'\n        changeStateOfAudio={changeStateOfAudio}\n        VolumeController={VolumeController}\n        env={env}\n      />\n      <Sound\n        name='train'\n        changeStateOfAudio={changeStateOfAudio}\n        VolumeController={VolumeController}\n        env={env}\n      />\n      <Sound\n        name='air-plane'\n        changeStateOfAudio={changeStateOfAudio}\n        VolumeController={VolumeController}\n        env={env}\n      />\n      <Sound\n        name='underwater'\n        changeStateOfAudio={changeStateOfAudio}\n        VolumeController={VolumeController}\n        env={env}\n      />\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport \"./style.css\";\n\nexport default function Sound({\n  name,\n  changeStateOfAudio,\n  VolumeController,\n  env,\n}: ISound) {\n  const [state, setState] = useState(false);\n\n  return (\n    <div className='sound-component'>\n      <audio loop id={name}>\n        <source src={`${env.HOST}/webm/${name}`} type='audio/webm' />\n        <source src={`${env.HOST}/mp3/${name}`} type='audio/mp3' />\n      </audio>\n\n      <div\n        className='sound-button'\n        id={`${name}-button`}\n        onClick={() => {\n          const audio = document.querySelector<HTMLAudioElement>(`#${name}`);\n          const button = document.getElementById(`${name}-button`);\n          const audioController = document.getElementById(\n            `${name}-audio-controller`\n          );\n          changeStateOfAudio(audio, state, setState, button, audioController);\n        }}\n      >\n        <img src={`/Noisekun/icons/${name}.svg`} alt={name} />\n      </div>\n\n      <VolumeController\n        audioObject={document.querySelector<HTMLAudioElement>(`#${name}`)}\n        id={`${name}-audio-controller`}\n      />\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\n\nimport \"./style.css\";\n\nexport default function Configurations() {\n  const [url, setUrl] = useState(localStorage.getItem(\"background_url\") ?? \"\");\n\n  function saveConfigs() {\n    const body = document.querySelector(\"body\");\n    if (body) {\n      body.style.backgroundImage = `url(${url})`;\n      localStorage.setItem(\"background_url\", url);\n    }\n  }\n\n  useEffect(() => {\n    saveConfigs();\n  }, []);\n\n  return (\n    <div id='configurations'>\n      <h4>Background</h4>\n      <div className='fieldset'>\n        <span className='fieldset-title'>url</span>\n        <input\n          type='text'\n          id='url'\n          name='url'\n          placeholder='png, jpeg, gif...'\n          onChange={(event) => {\n            setUrl(event.target.value);\n          }}\n        />\n      </div>\n      <button onClick={() => saveConfigs()}>SAVE</button>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport \"./style.css\";\n\nconst VolumeControler: React.FC<IVolumeController> = ({ audioObject, id }) => {\n  const changeVolume = (\n    audio: HTMLAudioElement | null,\n    value: number\n  ): void => {\n    if (audio) {\n      audio.volume = value;\n    }\n  };\n\n  const [rangeValue, setRangeValue] = useState(1000);\n\n  return (\n    <input\n      type='range'\n      name='audio-decrement'\n      className='audio-controller'\n      id={id}\n      min='1'\n      max='1000'\n      value={rangeValue}\n      onChange={(event) => {\n        setRangeValue(Number(event.target.value));\n        const decimalValue = Number(event.target.value) / 1000;\n        changeVolume(audioObject, decimalValue);\n      }}\n    />\n  );\n};\n\nexport default VolumeControler;\n","export default function changeStateOfAudio(\n  audio: HTMLAudioElement | null,\n  stateOfAudio: boolean,\n  setStateOfAudio: React.Dispatch<React.SetStateAction<boolean>>,\n  button: HTMLElement | null,\n  audioCotroller: Element | null\n): void {\n  if (!stateOfAudio) {\n    if (audio) {\n      audio.play();\n      setStateOfAudio(true);\n    }\n  } else {\n    if (audio) {\n      audio.pause();\n      setStateOfAudio(false);\n    }\n  }\n  if (button) {\n    button.classList.toggle(\"selected\");\n  }\n  if (audioCotroller) {\n    audioCotroller.classList.toggle(\"selected\");\n  }\n}\n","import React from \"react\";\n\nimport * as environment from \"./services/defaultVariables\";\n\nimport \"./styles/effects.css\";\nimport \"./styles/global.css\";\n\nimport Header from \"./components/Header\";\nimport Audios from \"./components/Audios\";\nimport Sound from \"./components/Sound\";\nimport Configurations from \"./components/Configurations\";\nimport VolumeController from \"./components/VolumeController\";\n\nimport changeStateOfAudio from \"./functions/changeStateOfAudio\";\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Header />\n      <div className='main-section'>\n        <Audios\n          Sound={Sound}\n          VolumeController={VolumeController}\n          changeStateOfAudio={changeStateOfAudio}\n          env={environment}\n        />\n        <Configurations />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}