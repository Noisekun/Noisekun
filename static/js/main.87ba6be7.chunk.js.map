{"version":3,"sources":["services/defaultVariables.ts","components/Header/index.tsx","components/Audios/index.tsx","components/Sound/index.tsx","components/Configurations/configs/background/index.tsx","components/Configurations/index.tsx","components/VolumeController/index.tsx","functions/changeStateOfAudio.ts","App.tsx","index.tsx"],"names":["dotenv","config","HOST","Header","className","href","Audios","Sound","VolumeController","changeStateOfAudio","env","name","useState","state","setState","loop","preload","id","src","type","onClick","audio","document","querySelector","button","getElementById","audioController","alt","audioObject","BackgroundConfig","setUrl","url","placeholder","value","onChange","event","target","Configurations","localStorage","getItem","backgroundUrl","setBackgroundUrl","saveConfigs","body","style","backgroundImage","setItem","useEffect","htmlFor","icon","faChevronLeft","resetConfigs","VolumeControler","rangeValue","setRangeValue","min","max","Number","decimalValue","changeVolume","volume","stateOfAudio","setStateOfAudio","audioCotroller","pause","play","classList","toggle","App","environment","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.87ba6be7.chunk.js","sourcesContent":["import dotenv from \"dotenv\";\ndotenv.config();\n\nconst HOST = \"https://noisekun-server.herokuapp.com\";\n\nexport { HOST };\n","import React from \"react\";\n\nimport \"./style.css\";\n\nexport default function Header() {\n  return (\n    <header className='header'>\n      <h1>\n        <a href='/Noisekun'>Noisekun</a>\n      </h1>\n    </header>\n  );\n}\n","import React from \"react\";\n\nimport \"./styles.css\";\n\nexport default function Audios({\n  Sound,\n  VolumeController,\n  changeStateOfAudio,\n  env,\n}: IAudios) {\n  return (\n    <div className='audios'>\n      <Sound\n        name='rain'\n        changeStateOfAudio={changeStateOfAudio}\n        VolumeController={VolumeController}\n        env={env}\n      />\n      <Sound\n        name='storm'\n        changeStateOfAudio={changeStateOfAudio}\n        VolumeController={VolumeController}\n        env={env}\n      />\n      <Sound\n        name='wind'\n        changeStateOfAudio={changeStateOfAudio}\n        VolumeController={VolumeController}\n        env={env}\n      />\n      <Sound\n        name='water'\n        changeStateOfAudio={changeStateOfAudio}\n        VolumeController={VolumeController}\n        env={env}\n      />\n      <Sound\n        name='ocean-waves'\n        changeStateOfAudio={changeStateOfAudio}\n        VolumeController={VolumeController}\n        env={env}\n      />\n      <Sound\n        name='small-waves'\n        changeStateOfAudio={changeStateOfAudio}\n        VolumeController={VolumeController}\n        env={env}\n      />\n      <Sound\n        name='forest-ambience'\n        changeStateOfAudio={changeStateOfAudio}\n        VolumeController={VolumeController}\n        env={env}\n      />\n      <Sound\n        name='leafs'\n        changeStateOfAudio={changeStateOfAudio}\n        VolumeController={VolumeController}\n        env={env}\n      />\n      <Sound\n        name='fire'\n        changeStateOfAudio={changeStateOfAudio}\n        VolumeController={VolumeController}\n        env={env}\n      />\n      <Sound\n        name='night'\n        changeStateOfAudio={changeStateOfAudio}\n        VolumeController={VolumeController}\n        env={env}\n      />\n      <Sound\n        name='coffee'\n        changeStateOfAudio={changeStateOfAudio}\n        VolumeController={VolumeController}\n        env={env}\n      />\n      <Sound\n        name='fan'\n        changeStateOfAudio={changeStateOfAudio}\n        VolumeController={VolumeController}\n        env={env}\n      />\n      <Sound\n        name='train'\n        changeStateOfAudio={changeStateOfAudio}\n        VolumeController={VolumeController}\n        env={env}\n      />\n      <Sound\n        name='air-plane'\n        changeStateOfAudio={changeStateOfAudio}\n        VolumeController={VolumeController}\n        env={env}\n      />\n      <Sound\n        name='underwater'\n        changeStateOfAudio={changeStateOfAudio}\n        VolumeController={VolumeController}\n        env={env}\n      />\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport \"./style.css\";\n\nexport default function Sound({\n  name,\n  changeStateOfAudio,\n  VolumeController,\n  env,\n}: ISound) {\n  const [state, setState] = useState(false);\n\n  return (\n    <div className='sound-component'>\n      <audio loop preload=\"true\" id={name}>\n        <source src={`${env.HOST}/webm/${name}`} type='audio/webm' />\n        <source src={`${env.HOST}/mp3/${name}`} type='audio/mp3' />\n      </audio>\n\n      <div\n        className='sound-button'\n        id={`${name}-button`}\n        onClick={() => {\n          const audio = document.querySelector<HTMLAudioElement>(`#${name}`);\n          const button = document.getElementById(`${name}-button`);\n          const audioController = document.getElementById(\n            `${name}-audio-controller`\n          );\n          changeStateOfAudio(audio, state, setState, button, audioController);\n        }}\n      >\n        <img src={`/Noisekun/icons/${name}.svg`} alt={name} />\n      </div>\n\n      <VolumeController\n        audioObject={document.querySelector<HTMLAudioElement>(`#${name}`)}\n        id={`${name}-audio-controller`}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\n\n// import { Container } from './styles';\n\nconst BackgroundConfig: React.FC<IBackgroundConfig> = ({ setUrl, url }) => {\n  return (\n    <>\n      <div className='fieldset'>\n        <div className='fieldset-content fieldset-content-title'>\n          <span>background</span>\n        </div>\n        <div className='fieldset-content fieldset-content-input'>\n          <input\n            type='text'\n            id='url'\n            name='url'\n            placeholder='png, jpeg, gif...'\n            value={url}\n            onChange={(event) => {\n              setUrl(event.target.value);\n            }}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default BackgroundConfig;\n","import React, { useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronLeft } from \"@fortawesome/free-solid-svg-icons\";\n\nimport BackgroundConfig from \"./configs/background\";\n\nimport \"./style.css\";\nimport \"./mobile-style.css\";\n\nexport default function Configurations() {\n  const [backgroundUrl, setBackgroundUrl] = useState(\n    localStorage.getItem(\"background_url\") ?? \"\"\n  );\n\n  function saveConfigs() {\n    const body = document.querySelector(\"body\");\n    if (body) {\n      body.style.backgroundImage = `url(${backgroundUrl})`;\n      localStorage.setItem(\"background_url\", backgroundUrl);\n    }\n  }\n  function resetConfigs() {\n    setBackgroundUrl(\"\");\n  }\n\n  useEffect(() => {\n    saveConfigs();\n  }, []);\n  useEffect(() => {\n    saveConfigs();\n  }, [backgroundUrl]);\n\n  return (\n    <>\n      <input type='checkbox' id='configButton' />\n      <label htmlFor='configButton' id='configLabel'>\n        <FontAwesomeIcon icon={faChevronLeft} />\n      </label>\n      <div id='configurations'>\n        <BackgroundConfig url={backgroundUrl} setUrl={setBackgroundUrl} />\n\n        <button onClick={() => resetConfigs()}>reset</button>\n      </div>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport \"./style.css\";\n\nconst VolumeControler: React.FC<IVolumeController> = ({ audioObject, id }) => {\n  const changeVolume = (\n    audio: HTMLAudioElement | null,\n    value: number\n  ): void => {\n    if (audio) {\n      audio.volume = value;\n    }\n  };\n\n  const [rangeValue, setRangeValue] = useState(1000);\n\n  return (\n    <input\n      type='range'\n      name='audio-decrement'\n      className='audio-controller'\n      id={id}\n      min='1'\n      max='1000'\n      value={rangeValue}\n      onChange={(event) => {\n        setRangeValue(Number(event.target.value));\n        const decimalValue = Number(event.target.value) / 1000;\n        changeVolume(audioObject, decimalValue);\n      }}\n    />\n  );\n};\n\nexport default VolumeControler;\n","export default function changeStateOfAudio(\n  audio: HTMLAudioElement | null,\n  stateOfAudio: boolean,\n  setStateOfAudio: React.Dispatch<React.SetStateAction<boolean>>,\n  button: HTMLElement | null,\n  audioCotroller: Element | null\n): void {\n  if (!stateOfAudio) {\n    if (audio) {\n      audio.play();\n      setStateOfAudio(true);\n    }\n  } else {\n    if (audio) {\n      audio.pause();\n      setStateOfAudio(false);\n    }\n  }\n  if (button) {\n    button.classList.toggle(\"selected\");\n  }\n  if (audioCotroller) {\n    audioCotroller.classList.toggle(\"selected\");\n  }\n}\n","import React from \"react\";\n\nimport * as environment from \"./services/defaultVariables\";\n\nimport \"./styles/effects.css\";\nimport \"./styles/global.css\";\n\nimport Header from \"./components/Header\";\nimport Audios from \"./components/Audios\";\nimport Sound from \"./components/Sound\";\nimport Configurations from \"./components/Configurations\";\nimport VolumeController from \"./components/VolumeController\";\n\nimport changeStateOfAudio from \"./functions/changeStateOfAudio\";\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Header />\n      <section className='main-section audio-section'>\n        <Audios\n          Sound={Sound}\n          VolumeController={VolumeController}\n          changeStateOfAudio={changeStateOfAudio}\n          env={environment}\n        />\n      </section>\n      <Configurations />\n      {/* <section className='main-section'></section> */}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}